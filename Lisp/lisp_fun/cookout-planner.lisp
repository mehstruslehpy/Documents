#!/bin/sbcl --script

(defun dogaccum (n)
 (cond
  ((> n 0)
   (princ "How many hotdogs will person ") (princ (+ n 1)) (princ " eat?")
   (fresh-line)
   (let ((dogs (read)) (total 0))
    (setq total  (+ dogs (dogaccum (- n 1))))
    total))
  ((zerop n)
   (princ "How many hotdogs will person ") (princ (+ n 1)) (princ " eat?")
   (fresh-line)
   (let ((dogs (read)))
    dogs))))

(defun dogpkgcnt-i (dogs &optional (accum 0))
 (cond
  ((> dogs 0)
   (dogpkgcnt-i (- dogs 10) (+ accum 1)))
  ((or (< dogs 0) (= dogs 0))
   accum)))

(defun pkgcnt-a (item perpkg)
 (car (multiple-value-list (ceiling (/ item perpkg)))))

(defun cookout-stats (ppl dogs dog-pkg bun-pkg dpkgprice bpkgprice dogperpkgcnt bunperpkgcnt)
 (princ "Guests: ") (princ ppl) (fresh-line)
 (princ "Hot dogs and buns needed: ") (princ dogs) (fresh-line)
 (princ "Hot dogs per package: ") (princ dogperpkgcnt) (fresh-line)
 (princ "Hot dog packages needed: ") (princ dog-pkg) (fresh-line)
 (princ "Buns per package: ") (princ bunperpkgcnt) (fresh-line)
 (princ "Bun packages needed: ") (princ bun-pkg) (fresh-line)
 (princ "Leftover hot dogs: ")(princ (- (* dogperpkgcnt dog-pkg) dogs)) (fresh-line)
 (princ "Leftover buns: ")(princ (- (* bunperpkgcnt bun-pkg) dogs)) (fresh-line)
 (princ "Cost per bun package: ")(princ bpkgprice) (fresh-line)
 (princ "Total spent on buns: ")(princ (* bun-pkg bpkgprice)) (fresh-line)
 (princ "Cost per hot dog package: ")(princ dpkgprice) (fresh-line)
 (princ "Total spent on hot dogs: ")(princ (* dog-pkg dpkgprice)) (fresh-line)
 (princ "Total spent: ") (princ (+(* dog-pkg dpkgprice)(* bun-pkg bpkgprice)))
 (fresh-line))

(defun cookout-planner ()
 (let ((ppl 0) (dogs 0) (dog-pkg 0) (bun-pkg 0) (dpkgprice 0) (bpkgprice 0) (dogperpkg 0) (bunperpkg 0))
  (princ "How many people will be attending your cookout? ") (fresh-line)
  (setq ppl (read))
  (setq dogs (dogaccum (- ppl 1)))
  (princ "How many hot dogs are in each package? ") (fresh-line)
  (setq dogperpkg (read))
  (princ "How much do hot dogs cost? ") (fresh-line)
  (setq dpkgprice (read))
  (setq dog-pkg (pkgcnt-a dogs dogperpkg))
  (princ "How many buns are in each package? ") (fresh-line)
  (setq bunperpkg (read))
  (princ "How much do buns cost? ") (fresh-line)
  (setq bpkgprice (read))
  (setq bun-pkg (pkgcnt-a dogs bunperpkg))
  (cookout-stats ppl dogs dog-pkg bun-pkg dpkgprice bpkgprice dogperpkg bunperpkg)))

(cookout-planner)
