;;does (+ 1 2) equal 3?
(print "Yup or nope 1:")
(if (= (+ 1 2) 3)
	(princ 'yup)
	(princ 'nope))
;;does (+ 1 2) equal 4?
(print "Yup or nope 2:")
(if (= (+ 1 2) 4)
	(princ 'yup)
	(princ 'nope))
(print "Is 3 even?:")
(if (evenp 3)
	(princ 'yup)
	(princ 'nope))
(print "Is 3 odd?:")
(if (oddp 3)
	(princ 'yup)
	(princ 'nope))
(print "Is 4 odd?:")
(if (oddp 4)
	(princ 'yup)
	(princ 'nope))
(print "Is 4 even?:")
(if (evenp 4)
	(princ 'yup)
	(princ 'nope))

;;progn stuff
(print "This is progn in action: ")
(defvar *number-was-odd* nil)

(if (oddp 5)
	(progn (setf *number-was-odd* t)
			(princ 'odd-number))
		(princ 'even-number))
